// Code generated by go-swagger; DO NOT EDIT.

package handler

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeclineReader is a Reader for the Decline structure.
type DeclineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeclineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeclineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeclineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeclineForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeclineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeclineOK creates a DeclineOK with default headers values
func NewDeclineOK() *DeclineOK {
	return &DeclineOK{}
}

/*
DeclineOK describes a response with status code 200, with default header values.

OK
*/
type DeclineOK struct {
}

// IsSuccess returns true when this decline o k response has a 2xx status code
func (o *DeclineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this decline o k response has a 3xx status code
func (o *DeclineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decline o k response has a 4xx status code
func (o *DeclineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this decline o k response has a 5xx status code
func (o *DeclineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this decline o k response a status code equal to that given
func (o *DeclineOK) IsCode(code int) bool {
	return code == 200
}

func (o *DeclineOK) Error() string {
	return fmt.Sprintf("[POST /decline/:taskId][%d] declineOK ", 200)
}

func (o *DeclineOK) String() string {
	return fmt.Sprintf("[POST /decline/:taskId][%d] declineOK ", 200)
}

func (o *DeclineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeclineBadRequest creates a DeclineBadRequest with default headers values
func NewDeclineBadRequest() *DeclineBadRequest {
	return &DeclineBadRequest{}
}

/*
DeclineBadRequest describes a response with status code 400, with default header values.

bad request
*/
type DeclineBadRequest struct {
	Payload string
}

// IsSuccess returns true when this decline bad request response has a 2xx status code
func (o *DeclineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this decline bad request response has a 3xx status code
func (o *DeclineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decline bad request response has a 4xx status code
func (o *DeclineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this decline bad request response has a 5xx status code
func (o *DeclineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this decline bad request response a status code equal to that given
func (o *DeclineBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DeclineBadRequest) Error() string {
	return fmt.Sprintf("[POST /decline/:taskId][%d] declineBadRequest  %+v", 400, o.Payload)
}

func (o *DeclineBadRequest) String() string {
	return fmt.Sprintf("[POST /decline/:taskId][%d] declineBadRequest  %+v", 400, o.Payload)
}

func (o *DeclineBadRequest) GetPayload() string {
	return o.Payload
}

func (o *DeclineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeclineForbidden creates a DeclineForbidden with default headers values
func NewDeclineForbidden() *DeclineForbidden {
	return &DeclineForbidden{}
}

/*
DeclineForbidden describes a response with status code 403, with default header values.

forbidden
*/
type DeclineForbidden struct {
	Payload string
}

// IsSuccess returns true when this decline forbidden response has a 2xx status code
func (o *DeclineForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this decline forbidden response has a 3xx status code
func (o *DeclineForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decline forbidden response has a 4xx status code
func (o *DeclineForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this decline forbidden response has a 5xx status code
func (o *DeclineForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this decline forbidden response a status code equal to that given
func (o *DeclineForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DeclineForbidden) Error() string {
	return fmt.Sprintf("[POST /decline/:taskId][%d] declineForbidden  %+v", 403, o.Payload)
}

func (o *DeclineForbidden) String() string {
	return fmt.Sprintf("[POST /decline/:taskId][%d] declineForbidden  %+v", 403, o.Payload)
}

func (o *DeclineForbidden) GetPayload() string {
	return o.Payload
}

func (o *DeclineForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeclineInternalServerError creates a DeclineInternalServerError with default headers values
func NewDeclineInternalServerError() *DeclineInternalServerError {
	return &DeclineInternalServerError{}
}

/*
DeclineInternalServerError describes a response with status code 500, with default header values.

internal error
*/
type DeclineInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this decline internal server error response has a 2xx status code
func (o *DeclineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this decline internal server error response has a 3xx status code
func (o *DeclineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this decline internal server error response has a 4xx status code
func (o *DeclineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this decline internal server error response has a 5xx status code
func (o *DeclineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this decline internal server error response a status code equal to that given
func (o *DeclineInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *DeclineInternalServerError) Error() string {
	return fmt.Sprintf("[POST /decline/:taskId][%d] declineInternalServerError  %+v", 500, o.Payload)
}

func (o *DeclineInternalServerError) String() string {
	return fmt.Sprintf("[POST /decline/:taskId][%d] declineInternalServerError  %+v", 500, o.Payload)
}

func (o *DeclineInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *DeclineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
